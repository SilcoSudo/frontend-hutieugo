# name: CI/CD Pipeline for Hutieugo and WordPress

# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       # Frontend build and test
#       - name: Set up Node.js (Frontend)
#         if: contains(github.repository, 'frontend-hutieugo')
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#       - name: Install dependencies (Frontend)
#         if: contains(github.repository, 'frontend-hutieugo')
#         run: npm ci
#       - name: Run tests (Frontend)
#         if: contains(github.repository, 'frontend-hutieugo')
#         run: npm test -- --watchAll=false

#       # Backend build and test
#       - name: Set up Java (Backend)
#         if: contains(github.repository, 'backend-hutieugo')
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#       - name: Build and test (Backend)
#         if: contains(github.repository, 'backend-hutieugo')
#         run: ./mvnw clean package

#   deploy:
#     needs: build-and-test
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/master'
#     steps:
#       - name: Deploy Hutieugo stack to VPS
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.VPS_HOST }}
#           username: ${{ secrets.VPS_USERNAME }}
#           key: ${{ secrets.VPS_SSH_KEY }}
#           port: ${{ secrets.VPS_PORT }}
#           script: |
#             cd ~/Web
#             echo "Pulling latest code from repositories..."
#             if [[ "${{ github.repository }}" =~ "frontend-hutieugo" ]]; then
#               git -C frontend-hutieugo pull origin master
#             fi
#             if [[ "${{ github.repository }}" =~ "backend-hutieugo" ]]; then
#               git -C backend-hutieugo pull origin master
#             fi
#             echo "Building and starting affected containers..."
#             if [[ "${{ github.repository }}" =~ "frontend-hutieugo" ]]; then
#               docker compose -f docker-compose.yml up -d --build frontend prometheus grafana
#             elif [[ "${{ github.repository }}" =~ "backend-hutieugo" ]]; then
#               docker compose -f docker-compose.yml up -d --build backend prometheus grafana
#             else
#               docker compose -f docker-compose.yml up -d --build
#             fi
#             echo "Checking running containers..."
#             docker compose -f docker-compose.yml ps

#       - name: Deploy WordPress stack to VPS
#         if: contains(github.repository, 'hutieugo-wordpress')
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.VPS_HOST }}
#           username: ${{ secrets.VPS_USERNAME }}
#           key: ${{ secrets.VPS_SSH_KEY }}
#           port: ${{ secrets.VPS_PORT }}
#           script: |
#             cd ~/hutieugo-wordpress
#             echo "Pulling latest code for WordPress..."
#             git pull origin master
#             echo "Waiting for Traefik to be ready..."
#             until docker ps | grep -q web-traefik-1; do
#               echo "Waiting for Traefik to be up..."
#               sleep 5
#             done
#             echo "Building and starting WordPress containers..."
#             docker compose -f docker-compose.yml up -d --build wordpress
#             echo "Checking running containers..."
#             docker compose -f docker-compose.yml ps


# name: CI/CD Pipeline for Hutieugo and WordPress

# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       # Frontend build and test
#       - name: Set up Node.js (Frontend)
#         if: contains(github.repository, 'frontend-hutieugo')
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#       - name: Install dependencies (Frontend)
#         if: contains(github.repository, 'frontend-hutieugo')
#         run: npm ci
#       - name: Run tests (Frontend)
#         if: contains(github.repository, 'frontend-hutieugo')
#         run: npm test -- --watchAll=false

#       # Backend build and test
#       - name: Set up Java (Backend)
#         if: contains(github.repository, 'backend-hutieugo')
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#       - name: Build and test (Backend)
#         if: contains(github.repository, 'backend-hutieugo')
#         run: ./mvnw clean package

#   deploy:
#     needs: build-and-test
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/master'
#     steps:
#       - name: Deploy Hutieugo stack to VPS
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.VPS_HOST }}
#           username: ${{ secrets.VPS_USERNAME }}
#           key: ${{ secrets.VPS_SSH_KEY }}
#           port: ${{ secrets.VPS_PORT }}
#           script: |
#             cd ~/Web
#             echo "Pulling latest code from repositories..."
#             if [[ "${{ github.repository }}" =~ "frontend-hutieugo" ]]; then
#               git -C frontend-hutieugo pull origin master
#             fi
#             if [[ "${{ github.repository }}" =~ "backend-hutieugo" ]]; then
#               git -C backend-hutieugo pull origin master
#             fi
#             echo "Building and starting affected containers..."
#             if [[ "${{ github.repository }}" =~ "frontend-hutieugo" ]]; then
#               docker compose -f docker-compose.yml up -d --build frontend prometheus grafana
#             elif [[ "${{ github.repository }}" =~ "backend-hutieugo" ]]; then
#               docker compose -f docker-compose.yml up -d --build backend prometheus grafana
#             else
#               docker compose -f docker-compose.yml up -d --build
#             fi
#             echo "Checking running containers..."
#             docker compose -f docker-compose.yml ps

#       - name: Deploy WordPress stack to VPS
#         if: contains(github.repository, 'hutieugo-wordpress')
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.VPS_HOST }}
#           username: ${{ secrets.VPS_USERNAME }}
#           key: ${{ secrets.VPS_SSH_KEY }}
#           port: ${{ secrets.VPS_PORT }}
#           script: |
#             cd ~/hutieugo-wordpress
#             echo "Pulling latest code for WordPress..."
#             git pull origin master
#             echo "Waiting for Traefik to be ready..."
#             until docker ps | grep -q web-traefik-1; do
#               echo "Waiting for Traefik to be up..."
#               sleep 5
#             done
#             echo "Building and starting WordPress containers..."
#             docker compose -f docker-compose.yml up -d --build wordpress
#             echo "Checking running containers..."
#             docker compose -f docker-compose.yml ps


name: CI/CD Pipeline for Hutieugo and WordPress

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:

    env:
  ACTIONS_STEP_DEBUG: true
  ACTIONS_RUNNER_DEBUG: true

      - name: Checkout code
        uses: actions/checkout@v4

      # Frontend build and test
      - name: Set up Node.js (Frontend)
        if: contains(github.repository, 'frontend-hutieugo')
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies (Frontend)
        if: contains(github.repository, 'frontend-hutieugo')
        run: npm ci
      - name: Run tests (Frontend)
        if: contains(github.repository, 'frontend-hutieugo')
        run: npm test -- --watchAll=false || true

      # Backend build and test
      - name: Set up Java (Backend)
        if: contains(github.repository, 'backend-hutieugo')
        uses: actions/setup-java@v3
        with:
          java-version: '17'
      - name: Build and test (Backend)
        if: contains(github.repository, 'backend-hutieugo')
        run: ./mvnw clean package

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Deploy Hutieugo stack to VPS
        uses: appleboy/ssh-action@v0.1.6  # Sử dụng phiên bản cụ thể
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd ~/Web
            echo "Pulling latest code from repositories..."
            git -C backend-hutieugo pull origin master || true
            git -C frontend-hutieugo pull origin master || true
            echo "Stopping old containers..."
            docker compose -f docker-compose.yml down || true
            echo "Building and starting new containers..."
            docker compose -f docker-compose.yml up -d --build
            echo "Checking running containers..."
            docker compose -f docker-compose.yml ps

      - name: Deploy WordPress stack to VPS
        uses: appleboy/ssh-action@v0.1.6  # Sử dụng phiên bản cụ thể
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd ~/hutieugo-wordpress
            echo "Pulling latest code for WordPress..."
            git pull origin master || true
            echo "Stopping old containers..."
            docker compose -f docker-compose.yml down || true
            echo "Waiting for Traefik to be ready..."
            until docker ps | grep -q web-traefik-1; do
              echo "Waiting for Traefik to be up..."
              sleep 5
            done
            echo "Starting WordPress containers..."
            docker compose -f docker-compose.yml up -d wordpress db redis
            echo "Checking running containers..."
            docker compose -f docker-compose.yml ps
            # Kiểm tra xem container WordPress có chạy không
            if ! docker ps | grep -q hutieugo-wordpress-wordpress-1; then
              echo "Error: WordPress container is not running!"
              docker logs hutieugo-wordpress-wordpress-1 || echo "No logs available for WordPress container"
              exit 1
            fi